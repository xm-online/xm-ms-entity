# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
#
# More information on profiles: https://jhipster.github.io/profiles/
# More information on configuration properties: https://jhipster.github.io/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================


spring:
    application:
        name: entity
    jackson:
        serialization.write_dates_as_timestamps: false
    cache:
        type: none
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:h2:mem:entity;DB_CLOSE_DELAY=-1;LOCK_TIMEOUT=20000
        name:
        username:
        password:
    jpa:
        database-platform: io.github.jhipster.domain.util.FixedH2Dialect
        database: H2
        open-in-view: false
        show-sql: true
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: false
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
            hibernate.hbm2ddl.auto: validate
    data:
        elasticsearch:
            cluster-name:
            cluster-nodes:
            properties:
                path:
                    logs: build/elasticsearch/log
                    data: build/elasticsearch/data
                cluster.routing.allocation.disk.threshold_enabled: false
                cluster.routing.allocation.disk.watermark.low: 500mb
                cluster.routing.allocation.disk.watermark.high: 600mb
    mail:
        host: localhost
    messages:
        basename: i18n/messages
    mvc:
        favicon:
            enabled: false
    thymeleaf:
        mode: XHTML

liquibase:
    contexts: test

security:
    basic:
        enabled: false

server:
    port: 10344
    address: localhost

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://jhipster.github.io/common-application-properties/
# ===================================================================

jhipster:
    async:
        core-pool-size: 1
        max-pool-size: 50
        queue-capacity: 10000
    # To test logstash appender
    logging:
        logstash:
            enabled: true
            host: localhost
            port: 5000
            queue-size: 512
    security:
        authentication:
            jwt:
                secret: b5838c74b2228da2189310693b41bac7c3162d51
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
        client-authorization:
            access-token-uri: http://uaa/oauth/token
            token-service-id: uaa
            client-id: internal
            client-secret: internal
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        logs: # Reports Dropwizard metrics in the logs
            enabled: true
            report-frequency: 60 # in seconds

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://jhipster.github.io/common-application-properties/
# ===================================================================

xm-config:
    enabled: false

application:
    scheduler-enabled: false
    kafka-enabled: false
    amazon:
        avatar:
            pre-persist-url-full-pattern: ^http(s)?:\/\/[a-zA-Z0-9-.]+[.]icthh[.][a-z]+(:\d+)?/[a-zA-Z0-9-.]+$
            post-load-url-part-pattern: ^[a-zA-Z0-9-.]+$
        aws:
            template: http://%s.rgw.icthh.test:7480/
        s3:
            bucket: xm-avatar
    max-avatar-size: 2
    tenant-client-connection-timeout: 10000
    tenant-client-read-timeout: 10000
    specification-path-pattern: /config/tenants/{tenantName}/entity/specs/xmentityspecs.yml
    specification-templates-path-pattern: /config/tenants/{tenantName}/entity/templates/${application.specification-templates-name}
    multifiles-specification-path-pattern: /config/tenants/{tenantName}/entity/xmentityspec-{contextName}.yml
    kafka-system-topic: system_topic
    kafka-system-queue: system_queue
    lep:
        tenant-script-storage: XM_MS_CONFIG
